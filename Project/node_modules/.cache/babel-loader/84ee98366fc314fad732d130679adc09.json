{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sanja\\\\Documents\\\\GitHub\\\\TempCode\\\\src\\\\Components\\\\Login.js\";\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\nimport authService from '../services/authService';\nimport { useHistory } from \"react-router-dom\";\nimport React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ViewListIcon from '@material-ui/icons/ViewList';\nimport GoogleButton from 'react-google-button';\nimport Avatar from \"@material-ui/core/Avatar\";\nconst useStyles = makeStyles(theme => ({\n  icon: {\n    marginRight: theme.spacing(1)\n  },\n  root: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1\n  }\n}));\nconst CLIENT_ID = process.env.REACT_APP_CLIENT_ID;\n\nfunction Login(props) {\n  const classes = useStyles();\n  let history = useHistory();\n  const [isLogined, setIsLogined] = React.useState(false);\n  const {\n    from\n  } = props.location.state || {\n    from: {\n      pathname: '/'\n    }\n  };\n  React.useEffect(() => {\n    setIsLogined(authService.isAuthenticated());\n  }, []);\n\n  const loginGoogle = response => {\n    console.log(response);\n    authService.loginWithGoogle(response).then(() => {\n      console.log(from.pathname);\n\n      if (from.pathname == \"/login\") {\n        history.push(\"/\");\n      } else {\n        history.push(from.pathname);\n      }\n    }, error => {\n      const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n      console.log(resMessage);\n    });\n  };\n\n  const loginAsGuest = () => {\n    authService.loginAsGuest().then(() => {\n      console.log(\"From Login.js\", from.pathname);\n\n      if (from.pathname == \"/login\") {\n        history.push(\"/\");\n      } else {\n        history.push(from.pathname);\n      }\n    }, error => {\n      const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n      console.log(resMessage);\n    });\n  };\n\n  const handleLoginFailure = response => {\n    console.log('Failed to log in');\n  };\n\n  const handleLogoutFailure = response => {\n    console.log('Failed to log out');\n  };\n\n  const logout = response => {\n    authService.logout();\n    setIsLogined(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 14\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexGrow: 1,\n      textAlign: 'start'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(AppBar, {\n    position: \"relative\",\n    style: {\n      backgroundColor: 'black'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    color: \"inherit\",\n    noWrap: true,\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, \"Login\")))), /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, isLogined ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 32\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 33\n    }\n  }, \"Already logged in. Want to logout?\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: logout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 33\n    }\n  }, \"Logout \")) : /*#__PURE__*/React.createElement(Button, {\n    onClick: loginAsGuest,\n    variant: \"contained\",\n    style: {\n      textTransform: \"none\"\n    },\n    startIcon: /*#__PURE__*/React.createElement(Avatar, {\n      src: \"https://static.thenounproject.com/png/3244607-200.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 40\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 28\n    }\n  }, \"Login as Guest(Anonymous)\")))));\n}\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/sanja/Documents/GitHub/TempCode/src/Components/Login.js"],"names":["GoogleLogin","GoogleLogout","authService","useHistory","React","AppBar","Button","CssBaseline","Grid","Toolbar","Typography","makeStyles","ViewListIcon","GoogleButton","Avatar","useStyles","theme","icon","marginRight","spacing","root","flexGrow","menuButton","title","CLIENT_ID","process","env","REACT_APP_CLIENT_ID","Login","props","classes","history","isLogined","setIsLogined","useState","from","location","state","pathname","useEffect","isAuthenticated","loginGoogle","response","console","log","loginWithGoogle","then","push","error","resMessage","data","message","toString","loginAsGuest","handleLoginFailure","handleLogoutFailure","logout","display","textAlign","backgroundColor","flexDirection","justifyContent","textTransform"],"mappings":"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","sourcesContent":["import { GoogleLogin, GoogleLogout } from 'react-google-login';\nimport authService from '../services/authService';\nimport { useHistory } from \"react-router-dom\";\nimport React from 'react';\n\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport ViewListIcon from '@material-ui/icons/ViewList';\n\nimport GoogleButton from 'react-google-button'\nimport Avatar from \"@material-ui/core/Avatar\";\n\nconst useStyles = makeStyles((theme) => ({\n    icon: {\n      marginRight: theme.spacing(1),\n    },\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n  }));\n\nconst CLIENT_ID = process.env.REACT_APP_CLIENT_ID;\n\nfunction Login(props){\n    const classes = useStyles();\n    let history = useHistory();\n    const [isLogined , setIsLogined] = React.useState(false);\n    const { from } = props.location.state || { from: { pathname: '/' } }\n    \n    React.useEffect(()=>{\n        setIsLogined(authService.isAuthenticated())\n    }, [])\n\n    const loginGoogle = (response)=>{\n        console.log(response);\n        authService.loginWithGoogle(response)\n        .then(() => {\n          console.log(from.pathname);\n          \n          if(from.pathname == \"/login\"){\n            history.push(\"/\");\n\n          }else{\n            history.push(from.pathname);\n          }\n          },\n          error => {\n            const resMessage =\n              (error.response &&\n                error.response.data &&\n                error.response.data.message) ||\n              error.message ||\n              error.toString();\n            console.log(resMessage);\n          }      \n          );\n    }\n\n    const loginAsGuest = ()=>{\n        \n        authService.loginAsGuest()\n        .then(() => {\n          console.log(\"From Login.js\",from.pathname);\n          \n          if(from.pathname == \"/login\"){\n            history.push(\"/\");\n\n          }else{\n            history.push(from.pathname);\n          }\n          },\n          error => {\n            const resMessage =\n              (error.response &&\n                error.response.data &&\n                error.response.data.message) ||\n              error.message ||\n              error.toString();\n            console.log(resMessage);\n          }      \n          );\n    }\n\n    const handleLoginFailure = (response)=>{\n        console.log('Failed to log in');\n    }\n    \n    const handleLogoutFailure = (response)=>{\n        console.log('Failed to log out');\n    }\n\n    const logout = (response)=>{\n        authService.logout();\n        setIsLogined(false);\n      }\n\n\n    return(\n        <div>\n             <CssBaseline />\n             <div style={{display: 'flex', flexGrow: 1, textAlign: 'start'}}>\n        <AppBar position=\"relative\" style={{backgroundColor: 'black'}}>\n          <Toolbar>\n            \n            <Typography variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n              Login\n            </Typography>\n          </Toolbar>\n        </AppBar>\n      </div>\n\n        \n            <main>\n           \n\n            <div style={{display: 'flex', flexDirection: 'column', justifyContent: 'center'}}>\n            {\n            }\n            <br></br>\n            <br></br>\n            <div>\n               {  isLogined ? (<div>\n                                <p>Already logged in. Want to logout?</p>\n                                <button onClick={logout}>Logout </button>\n                            </div>) : (\n                           <Button\n                            onClick={loginAsGuest}\n                            variant=\"contained\"\n                            style={{textTransform: \"none\"}}\n                            startIcon={<Avatar  src={\"https://static.thenounproject.com/png/3244607-200.png\"}/>  } >\n                            Login as Guest(Anonymous)\n                        </Button>\n                   )\n               }\n            </div>\n        </div>\n                \n            </main>\n        </div>\n    )\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}